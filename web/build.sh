#!/usr/bin/env bash
#
# DEPENDENCIES:
# - wasm32-wasi
# - wizer
# - binaryen
# - deno
#
# RUN WITH
#
# (orb -m nixe nix shell
#     'gitlab:haskell-wasm/ghc-wasm-meta?host=gitlab.haskell.org'
#     nixpkgs#wizer
#     nixpkgs#binaryen
#     nixpkgs#deno
#     --extra-experimental-features nix-command
#     --extra-experimental-features flakes)

set -euf -o pipefail

echo "+++ INFO: update and clean build environment"
# cabal clean -v0
# wasm32-wasi-cabal --project-file=cabal.project.wasm update

echo "+++ INFO: start build and copy WASM"
wasm32-wasi-cabal --project-file=cabal.project.wasm build impli-wasm
BIN="$(wasm32-wasi-cabal --project-file=cabal.project.wasm list-bin impli-wasm)"

echo "+++ INFO: create JSFFI pseudo ES-module"
JSFFI="./web/src/ghc_wasm_jsffi.js"
$(wasm32-wasi-ghc --print-libdir)/post-link.mjs -i "$BIN" -o "$JSFFI"
echo -e "// DO NOT EDIT!!\n// THIS FILE IS AUTOGENERATED\n\n$(cat "$JSFFI")" > "$JSFFI"


echo "+++ INFO: pre-initialize and optimize WASM"
WASM="./web/static/impli.wasm"
wizer \
    --allow-wasi \
    --wasm-bulk-memory true \
    --init-func _initialize \
    "$BIN" -o "$WASM"
# wasm-opt "$WASM-init" -o "$WASM" -Oz

# echo "+++ INFO: bundle Javascript"
# deno bundle --minify --platform=browser --format=esm web/src/index.js -o web/static/mod.js
