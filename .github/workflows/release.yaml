name: Build impli CLI

on:
    push:
        tags:
            - "v*"
    pull_request:
        branches: [master]
    workflow_dispatch:

jobs:
    build:
        name: Build on ${{ matrix.os }}
        runs-on: ${{ matrix.os }}
        strategy:
            matrix:
                os: [ubuntu-latest, macos-latest, windows-latest]

        steps:
            - name: Checkout repo
              uses: actions/checkout@v3

            - name: Set up Haskell
              id: setup-haskell
              uses: haskell-actions/setup@v2
              with:
                  ghc-version: "9.10.2"
                  cabal-version: "3.12"

            - name: Cache Cabal store
              uses: actions/cache@v3
              with:
                  path: ${{ steps.setup-haskell.outputs.cabal-store }}
                  key: ${{ runner.os }}-cabal

            - name: Build impli
              run: |
                  cabal update
                  cabal build exe:impli

            - name: Upload executable to artifacts
              shell: bash
              run: |
                  mkdir -p artifacts

                  # Fallback platform detection
                  ARCH=$(uname -m)
                  OS=$(uname -s | tr '[:upper:]' '[:lower:]')

                  # Normalize architecture name
                  if [[ "$ARCH" == "arm64" ]]; then
                    ARCH="aarch64"
                  elif [[ "$ARCH" == "x86_64" || "$ARCH" == "amd64" ]]; then
                    ARCH="x86_64"
                  fi

                  # Normalize OS name
                  if [[ "$RUNNER_OS" == "Windows" ]]; then
                    OS="windows"
                    EXT=".exe"
                  elif [[ "$RUNNER_OS" == "macOS" ]]; then
                    OS="darwin"
                    EXT=""
                  else
                    OS="linux"
                    EXT=""
                  fi

                  PLATFORM="${ARCH}-${OS}"
                  BINARY_NAME="impli${EXT}"

                  echo "🔍 Looking for binary: $BINARY_NAME"

                  # Locate the binary (executable)
                  BIN=$(find dist-newstyle -type f -name "$BINARY_NAME" | head -n 1)

                  if [[ -z "$BIN" ]]; then
                    echo "❌ ERROR: Could not find compiled binary '$BINARY_NAME'"
                    exit 1
                  fi

                  # Make it executable on Unix
                  if [[ "$OS" != "windows" ]]; then
                    chmod +x "$BIN"
                    echo "🔧 Stripping binary to reduce size..."
                    strip -u -r "$BIN" || echo "⚠️ strip failed, continuing..."
                  fi

                  # Copy and rename with platform suffix
                  cp "$BIN" "artifacts/impli-${PLATFORM}${EXT}"

                  echo "✅ Binary copied to artifacts/impli-${PLATFORM}${EXT}"

            - name: Get latest Git tag (fallback)
              if: github.event_name == 'workflow_dispatch'
              id: get_tag
              run: |
                  echo "tag=$(git describe --tags --abbrev=0)" >> "$GITHUB_OUTPUT"

            - name: Upload to GitHub Release
              if: startsWith(github.ref, 'refs/tags/')
              uses: softprops/action-gh-release@v1
              with:
                  files: artifacts/*
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
